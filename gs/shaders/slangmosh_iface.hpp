// Autogenerated from slangmosh, do not edit.
#ifndef SLANGMOSH_GENERATED_ParallelGSiface_H
#define SLANGMOSH_GENERATED_ParallelGSiface_H
#include <stdint.h>
namespace Vulkan
{
class Program;
class Shader;
}

namespace ParallelGS
{
template <typename Program = Vulkan::Program *, typename Shader = Vulkan::Shader *>
struct Shaders
{
	Program binning = {};
	Program upload[2] = {};
	Program clut_write = {};
	Program vram_copy = {};
	Program triangle_setup = {};
	Program single_sample_heuristic = {};
	Program ubershader[2][2] = {};
	Shader quad = {};
	Shader sample_circuit = {};
	Shader blit_circuit = {};
	Shader weave = {};
	Shader sharpen_vert = {};
	Shader sharpen_frag = {};
	Shader upscale_vert = {};
	Shader upscale_frag = {};
	Shader blit = {};
	Program extwrite = {};
	Program qword_clear = {};
	Shaders() = default;

	template <typename Device, typename Layout, typename Resolver>
	Shaders(Device &device, Layout &layout, const Resolver &resolver);
};
}
#endif
